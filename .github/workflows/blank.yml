# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
          
          
          
  - name: Veracode Dependency Scanning
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-sca@d8ce4a08eebf1a6c5e7759c1dc53c1172a3e7e64
  uses: veracode/veracode-sca@v1.09
  with:
    # Authorization token to query and create issues
    github_token: 
    # 
    quick: # true
    # Show update advisor
    update_advisor: # optional, default is false
    # A git URL to work with in case the scan is not for the current repository
    url: # optional, default is 
    # The minimum CVSS value for vulnerability to be added as an issue
    min-cvss-for-issue: # optional, default is 0
    # The maximum allowed cvss in found vulnerabilities to pass the step
    fail-on-cvss: # optional, default is 10
    # An attribute to instruct the action to create an issue from found vulnerability or just simple text output
    create-issues: # optional, default is false
    # A path within the repository where the build definition starts
    path: # optional, default is .
    # Run the SRCCLR in debug mode
    debug: # optional, default is false
    # Run the SRCCLR with the `--skip-collectors` options
    skip-collectors: # optional, default is false
    # Run the SRCCLR with the `--allow-dirty` option
    allow-dirty: # optional, default is false
    # Run the SRCCLR with the `--recursive` option
    recursive: # optional, default is false
    
